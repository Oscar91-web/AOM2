{"version":3,"sources":["components/Utils.js","components/employees/EmployeeDetails.js","components/employees/EmployeeGroups.js","components/employees/EmployeeListDataTable.js","components/employees/Employee.js","components/menu/Menu.js","App.js","reportWebVitals.js","index.js"],"names":["buildURL","resource","path","params","ret","API_URL","qp","Object","keys","map","p","filter","v","join","console","log","phonePatternString","phonePattern","RegExp","emailPatternString","emailPattern","require","GridRow","GridCell","TextField","MenuSurfaceAnchor","Menu","MenuItem","Button","EmployeeDetails","employee","employeeGroups","setEmployee","useState","name","setName","openEmpGroups","setOpenEmpGroups","phone","setPhone","email","setEmail","employee_group","empGroup","setEmpGroup","hasChanged","setHasChanged","save","a","url","user","data","employee_group_id","axios","put","result","span","fullwidth","value","onKeyDown","e","target","key","onChange","outlined","label","login","readOnly","number","legal_entity_id","legal_entity","org_unit_id","org_unit","department_id","department","warehouse_id","warehouse","onClick","open","renderToPortal","g","description","clickedEmpgroup","isPhoneValid","test","pattern","isEmailValid","disabled","isValid","valid","length","allFieldsValid","returnValue","saveButtonEnabled","EmployeeGroups","userGroupsList","userGroups","ug","EmployeeListDataTable","employees","clicked","employeeList","orgUnit","alignEnd","Employees","content","setEmployees","search","setSearch","setEmployeeGroups","activeTab","setActiveTab","setOpen","detailedList","setDetailedList","setUserGroups","searchUserGroups","searchEmps","get","usergroups","searchEmpGroups","codes","useEffect","use","activeTabIndex","onActivate","evt","idx","detail","index","minWidth","autoFocus","icon","limit","q","to","style","color","textDecoration","WebFont","load","google","families","App","align","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db66aeea.chunk.js","sourcesContent":["const API_URL = \"http://pluto.im.se:5280/JSONTRIMService/json\";\r\n\r\nfunction buildURL(resource, path, params) {\r\n    let ret = API_URL + \"/\" + resource + ((path) ? \"/\" + path : \"\");\r\n    let qp = null;\r\n    if (params) {\r\n        qp = Object.keys(params).map(p => [p, params[p]]).filter(v => v[1]).map(v => v.join('=')).join('&');\r\n    }\r\n    if (qp) {\r\n        ret = ret + \"?\" + qp;\r\n    }\r\n    console.log(\"built URL: \" + ret);\r\n    return ret;\r\n}\r\n\r\n\r\nexport default buildURL;","import '@rmwc/icon/styles';\r\nimport '@rmwc/icon/icon.css';\r\nimport { useState } from 'react';\r\nimport buildURL from '../Utils';\r\nimport axios from 'axios';\r\n\r\n// const phonePattern = /^\\+?[0-9()\\- ]+$/;\r\n// const phonePatternString = \"^[+]?[0-9 \\(\\)\\-]+\";\r\nconst phonePatternString = \"^[+]?[0-9 ()-]+$\";\r\nconst phonePattern = new RegExp(phonePatternString);\r\nconst emailPatternString = \"^[a-zA-Z0-9.-]+@[a-zA-Z0-9.-]+$\";\r\nconst emailPattern = new RegExp(emailPatternString);\r\n\r\nconst { GridRow, GridCell, TextField, MenuSurfaceAnchor, Menu, MenuItem, Button } = require(\"rmwc\")\r\n\r\nconst EmployeeDetails = ({ employee, setEmployee, employeeGroups }) => {\r\n    const [name, setName] = useState(employee.name);\r\n    const [openEmpGroups, setOpenEmpGroups] = useState(false);\r\n    const [phone, setPhone] = useState(employee.phone ? employee.phone : \"\");\r\n    const [email, setEmail] = useState(employee.email ? employee.email : \"\");\r\n    const [empGroup, setEmpGroup] = useState(employee.employee_group);\r\n    const [hasChanged, setHasChanged] = useState(false);\r\n\r\n    console.log(employee);\r\n\r\n    function enteredName(e) {\r\n        let value = e.target.value;\r\n        if (e.key === 'Enter') {\r\n            console.log(\"entered name: \" + value);\r\n            setName(value);\r\n        }\r\n    }\r\n\r\n\r\n    function clickedEmpgroup(g) {\r\n        console.log(\"clicked emp group\");\r\n        console.log(g);\r\n        // employee.employee_group_id = g.value;\r\n        setEmpGroup(g.value);\r\n        setHasChanged(g.value !== employee.employee_group_id);\r\n        employee.employee_group = g.description;\r\n        setOpenEmpGroups(false);\r\n        // setEmployee(employee);\r\n        console.log(employee);\r\n    }\r\n\r\n    function clickedEmpgroupField() {\r\n        setOpenEmpGroups(true);\r\n    }\r\n\r\n    function handleNameChange(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handlePhoneChange(e) {\r\n        console.log(\"handlephonechg:\")\r\n        console.log(e);\r\n        let value = e.target.value;\r\n        let isPhoneValid = phonePattern.test(value);\r\n        console.log(\"phone valid: \" + isPhoneValid)\r\n        setPhone(value);\r\n        setHasChanged(value !== employee.phone);\r\n    }\r\n\r\n    function handleEmailChange(e) {\r\n        console.log(\"handleemailchg:\")\r\n        console.log(e);\r\n        let value = e.target.value;\r\n        let isEmailValid = emailPattern.test(value);\r\n        console.log(\"email valid: \" + isEmailValid)\r\n        setEmail(value);\r\n        setHasChanged(value !== employee.email);\r\n    }\r\n\r\n    function saveButtonEnabled() {\r\n        console.log(\"has changed:\" + hasChanged);\r\n        let isValid = allFieldsValid();\r\n        console.log(\"isValid: \" + isValid);\r\n        let returnValue = hasChanged && isValid;\r\n        console.log(\"saveButtonEnabled: \" + returnValue);\r\n        return returnValue;\r\n    }\r\n    function allFieldsValid() {\r\n        // return emailValid && phoneValid;\r\n        let valid = \r\n            (phone.length === 0 || phonePattern.test(phone))\r\n            && (email.length === 0 || emailPattern.test(email))\r\n            // && (empGroup !== employee.employee_group_id);\r\n        console.log(\"allFieldsValid: \" + valid);\r\n        return valid;\r\n    }\r\n\r\n    const save = async () => {\r\n        let url = buildURL(\"pers\", employee.user);\r\n        try {\r\n            let data = {};\r\n            if (phone !== employee.phone) {\r\n                data.phone = phone;\r\n            }\r\n            if (email !== employee.email) {\r\n                data.email = email;\r\n            }\r\n            if (empGroup !== employee.employee_group_id) {\r\n                data.employee_group_id = empGroup;\r\n            }\r\n            let result = await axios.put(url, data);\r\n            if (result != null) {\r\n                console.log(\"result after put\");\r\n                console.log(result);\r\n            }\r\n            else {\r\n                console.log(\"no result after put\");\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.log(err)\r\n            // setError(err.message);\r\n        }\r\n    }\r\n\r\n    if (employee) {\r\n        console.log(\"empgroup\");\r\n        console.log(employeeGroups);\r\n        return (<div>\r\n            <GridRow>\r\n                <GridCell span={8}>\r\n                    <TextField fullwidth value={name} onKeyDown={enteredName} onChange={handleNameChange}></TextField>\r\n                </GridCell>\r\n            </GridRow>\r\n            <GridRow>\r\n                <br />\r\n            </GridRow>\r\n            <GridRow>\r\n                <GridCell span={12}>\r\n                    <GridRow>\r\n                        <GridCell span={2}>\r\n                            <TextField outlined label=\"Login\" value={employee.login} readOnly />\r\n                        </GridCell>\r\n                        <GridCell span={2}>\r\n                            <TextField outlined label=\"User\" value={employee.user} readOnly />\r\n                        </GridCell>\r\n                        <GridCell span={2}>\r\n                            <TextField outlined label=\"Employno\" value={employee.number} readOnly />\r\n                        </GridCell>\r\n                    </GridRow>\r\n                </GridCell>\r\n            </GridRow>\r\n            <GridRow>\r\n                <br />\r\n            </GridRow>\r\n            <GridRow>\r\n                <GridCell span={12}>\r\n                    <GridRow>\r\n                        <GridCell span={2}>\r\n                            <TextField outlined label=\"Legal Entity\" value={employee.legal_entity_id} readOnly />\r\n                        </GridCell>\r\n                        <GridCell span={8}>\r\n                            <TextField fullwidth value={employee.legal_entity} readOnly />\r\n                        </GridCell>\r\n                    </GridRow>\r\n                </GridCell>\r\n            </GridRow>\r\n            <p />\r\n            <GridRow>\r\n                <GridCell span={12}>\r\n                    <GridRow>\r\n                        <GridCell span={2}>\r\n                            <TextField outlined label=\"Organizational Unit\" value={employee.org_unit_id} readOnly />\r\n                        </GridCell>\r\n                        <GridCell span={8}>\r\n                            <TextField fullwidth value={employee.org_unit} readOnly />\r\n                        </GridCell>\r\n                    </GridRow>\r\n                </GridCell>\r\n            </GridRow>\r\n            <p />\r\n            <GridRow>\r\n                <GridCell span={12}>\r\n                    <GridRow>\r\n                        <GridCell span={2}>\r\n                            <TextField outlined label=\"Department\" value={employee.department_id} readOnly />\r\n                        </GridCell>\r\n                        <GridCell span={8}>\r\n                            <TextField fullwidth value={employee.department} readOnly />\r\n                        </GridCell>\r\n                    </GridRow>\r\n                </GridCell>\r\n            </GridRow>\r\n            <p />\r\n            <GridRow>\r\n                <GridCell span={12}>\r\n                    <GridRow>\r\n                        <GridCell span={2}>\r\n                            <TextField outlined label=\"Warehouse\" value={employee.warehouse_id} readOnly />\r\n                        </GridCell>\r\n                        <GridCell span={8}>\r\n                            <TextField fullwidth value={employee.warehouse} readOnly />\r\n                        </GridCell>\r\n                    </GridRow>\r\n                </GridCell>\r\n            </GridRow>\r\n            <p />\r\n            <GridRow>\r\n                <GridCell span={12}>\r\n                    <GridRow>\r\n                        <GridCell span={2}>\r\n                            <TextField outlined label=\"Employment Group\" value={empGroup} onClick={clickedEmpgroupField} readOnly />\r\n                            <MenuSurfaceAnchor>\r\n                                <Menu open={openEmpGroups} renderToPortal={true}>\r\n                                    {employeeGroups.map(g => (\r\n                                        <MenuItem key={g.value} onClick={() => clickedEmpgroup(g)}>{g.value} - {g.description}</MenuItem>\r\n                                    ))}\r\n                                </Menu>\r\n                            </MenuSurfaceAnchor>\r\n\r\n                        </GridCell>\r\n                        <GridCell span={8}>\r\n                            <TextField fullwidth value={employee.employee_group} readOnly />\r\n                        </GridCell>\r\n                    </GridRow>\r\n                </GridCell>\r\n            </GridRow>\r\n            <p />\r\n            <p />\r\n            <GridRow>\r\n                <GridCell span={12}>\r\n                    <GridRow>\r\n                        <GridCell span={2}>\r\n                            <TextField outlined label=\"Phone\" value={phone} onChange={handlePhoneChange} pattern={phonePatternString} />\r\n                        </GridCell>\r\n                    </GridRow>\r\n                </GridCell>\r\n            </GridRow>\r\n            <p />\r\n            <GridRow>\r\n                <GridCell span={12}>\r\n                    <GridRow>\r\n                        <GridCell span={2}>\r\n                            <TextField outlined label=\"E-mail\" value={email} onChange={handleEmailChange} pattern={emailPatternString} />\r\n                        </GridCell>\r\n                    </GridRow>\r\n                </GridCell>\r\n            </GridRow>\r\n            <p />\r\n            <GridRow>\r\n                <GridCell span={12}>\r\n                    <GridRow>\r\n                        <GridCell span={2}>\r\n                            <Button label=\"Save\" disabled={!saveButtonEnabled()} onClick={save}></Button>\r\n                        </GridCell>\r\n                    </GridRow>\r\n                </GridCell>\r\n            </GridRow>\r\n        </div>)\r\n    }\r\n    else {\r\n        return (<div />)\r\n    }\r\n}\r\n\r\nexport default EmployeeDetails;","// import { useState } from \"react\";\r\n// import axios from 'axios';\r\n\r\nconst { GridRow, GridCell, TextField } = require(\"rmwc\")\r\n\r\nconst EmployeeGroups = ({employee, userGroups}) => {\r\n\r\n    // const [userGroups, setUserGroups] = useState(null);\r\n\r\n    // const searchGroups = async (url) => {\r\n    //     console.log(url);\r\n    //     try {\r\n    //         const data = await axios.get(url);\r\n    //         if (data != null) {\r\n    //             console.log(data.data.usergroups);\r\n    //             setUserGroups(data.data.usergroups);\r\n    //         }\r\n    //     }\r\n    //     catch (err) {\r\n    //         console.log(err)\r\n    //         // setError(err.message);\r\n    //     }\r\n    // }\r\n\r\n\r\n    let userGroupsList = userGroups.map(ug => \r\n        <>\r\n        <GridRow>\r\n        <GridCell span={12}>\r\n            <GridRow>\r\n                <GridCell span={2}>\r\n                    <TextField outlined label=\"User\" value={employee.name} readOnly />\r\n                </GridCell>\r\n                <GridCell span={4}>\r\n                    <TextField outlined label=\"Group\" value={ug} readOnly />\r\n                </GridCell>\r\n            </GridRow>\r\n        </GridCell>\r\n    </GridRow>\r\n    <p/>\r\n    </>\r\n    );\r\n\r\n    if (employee) {\r\n        // searchGroups(API_URL + \"/\" + employee.user);\r\n        return <>\r\n        {userGroupsList}\r\n        </>\r\n    }\r\n    else return <div/>;\r\n}\r\n\r\nexport default EmployeeGroups;","import React, { } from \"react\";\r\nimport { DataTable, DataTableBody, DataTableCell, DataTableContent, DataTableHead, DataTableHeadCell, DataTableRow } from \"rmwc\";\r\n\r\nimport '@rmwc/icon/styles';\r\nimport '@rmwc/icon/icon.css';\r\n\r\nconst EmployeeListDataTable = ({ employees, clicked }) => {\r\n\r\n  // const [employee, setEmployee] = useState(null);\r\n        let employeeList = employees.map(e => \r\n        <DataTableRow key={e.user} onClick={() => clicked(e)}>\r\n              <DataTableCell>{e.number}</DataTableCell>\r\n              <DataTableCell>{e.login}</DataTableCell>\r\n              <DataTableCell>{e.user}</DataTableCell>\r\n              <DataTableCell>{e.name}</DataTableCell>\r\n              <DataTableCell>{e.legal_entity}</DataTableCell>\r\n              <DataTableCell>{e.orgUnit}</DataTableCell>\r\n              <DataTableCell>{e.department}</DataTableCell>\r\n              <DataTableCell>{e.warehouse}</DataTableCell>\r\n        </DataTableRow>\r\n    );\r\n    if (!employees || employees.length === 0) {\r\n      return <></>;\r\n    }\r\n    return (\r\n      <div>\r\n      <DataTable>\r\n        <DataTableContent>\r\n          <DataTableHead>\r\n            <DataTableRow>\r\n              <DataTableHeadCell>Employment Number</DataTableHeadCell>\r\n              <DataTableHeadCell>Login Id</DataTableHeadCell>\r\n              <DataTableHeadCell>User Id</DataTableHeadCell>\r\n              <DataTableHeadCell>Employment Name</DataTableHeadCell>\r\n              <DataTableHeadCell>Legal Entity</DataTableHeadCell>\r\n              <DataTableHeadCell>Organizational Unit</DataTableHeadCell>\r\n              <DataTableHeadCell>Department</DataTableHeadCell>\r\n              <DataTableHeadCell alignEnd>Warehouse Number</DataTableHeadCell>\r\n            </DataTableRow>\r\n          </DataTableHead>\r\n          <DataTableBody>\r\n              {employeeList}\r\n          </DataTableBody>\r\n        </DataTableContent>\r\n      </DataTable>\r\n      {/* <EmployeeDetails employee={employee}></EmployeeDetails> */}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default EmployeeListDataTable;\r\n","import { Menu, GridRow, Tab, TabBar, TextField, Typography, GridCell, MenuSurfaceAnchor, MenuItem } from \"rmwc\";\r\n// import Icon from '@rmwc/icon';\r\nimport axios from 'axios';\r\nimport '@rmwc/icon/styles';\r\nimport '@rmwc/icon/icon.css';\r\n// import EmployeeList from \"./EmployeeList\";\r\nimport { useEffect, useState } from \"react\";\r\nimport EmployeeDetails from \"./EmployeeDetails\";\r\nimport EmployeeGroups from \"./EmployeeGroups\";\r\nimport EmployeeListDataTable from \"./EmployeeListDataTable\";\r\nimport buildURL from \"../Utils\";\r\n\r\nconst Employees = () => {\r\n    const [employees, setEmployees] = useState([]);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [employee, setEmployee] = useState(null);\r\n    const [employeeGroups, setEmployeeGroups] = useState([]);\r\n    const [activeTab, setActiveTab] = useState(0);\r\n    const [open, setOpen] = useState(false);\r\n    const [detailedList, setDetailedList] = useState(false);\r\n    const [userGroups, setUserGroups] = useState([]);\r\n\r\n    const handleChange = (e) => {\r\n        let value = e.target.value;\r\n        setSearch(value);\r\n        if (value.length > 1) {\r\n            setOpen(true);\r\n        }\r\n        if (value.length > 2) {\r\n            searchEmps(buildURL(\"employees\", null, {limit: 5, q: value}));\r\n        }\r\n        else {\r\n            setEmployees([]);\r\n        }\r\n    }\r\n\r\n    const keyDown = (e) => {\r\n        let value = e.target.value;\r\n        console.log(\"key: \" + e.key)\r\n        console.log(\"trgt vl: \" + e.target.value)\r\n        if (e.key === 'Enter') {\r\n            console.log('Enter pressed');\r\n            setSearch(e.target.value);\r\n            setDetailedList(true);\r\n            setOpen(false);\r\n            setEmployees([]);\r\n            setActiveTab(0);\r\n            // searchEmps(API_URL + \"/?limit=10&q=\" + value);\r\n            searchEmps(buildURL(\"employees\", null, {limit: 10, q: value}));\r\n        }\r\n    }\r\n\r\n    const clickedSearchButton = () => {\r\n        setEmployee(null);\r\n        setEmployees([]);\r\n        setDetailedList(false);\r\n    }\r\n\r\n    const clicked = (e) => {\r\n        console.log(\"CLICKJED!!!!\")\r\n        setSearch(\"\");\r\n        setEmployees([]);\r\n        setEmployee(e);\r\n        setActiveTab(0);\r\n        setOpen(false);\r\n        searchUserGroups(e);\r\n    };\r\n\r\n    const setTab = (idx) => {\r\n        console.log(\"tab chosen: \" + idx);\r\n        setActiveTab(idx);\r\n    }\r\n\r\n    const searchEmps = async (url) => {\r\n        console.log(url);\r\n        try {\r\n            const data = await axios.get(url);\r\n            if (data != null) {\r\n                console.log(data.data.employees);\r\n                setEmployees(data.data.employees);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.log(err)\r\n            // setError(err.message);\r\n        }\r\n    }\r\n\r\n    const searchUserGroups = async (employee) => {\r\n        const url = buildURL(\"usergroups\", employee.user);\r\n        \r\n        console.log(\"rurl: \" + url);\r\n        try {\r\n            const data = await axios.get(url);\r\n            if (data != null) {\r\n                console.log(\"hERERERE\")\r\n                console.log(data.data.usergroups);\r\n                setUserGroups(data.data.usergroups);\r\n            }\r\n            else {\r\n                console.log(\"NO USER GROUP GFOUnd\")\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.log(err)\r\n            // setError(err.message);\r\n        }\r\n    }\r\n    const searchEmpGroups = async () => {\r\n        let url = buildURL(\"codelookup\", \"EMPGROUP\");\r\n        console.log(url);\r\n        try {\r\n            const data = await axios.get(url);\r\n            if (data != null) {\r\n                console.log(\"codes:\");\r\n                console.log(data.data.codes);\r\n                setEmployeeGroups(data.data.codes);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.log(err)\r\n            // setError(err.message);\r\n        }\r\n    }\r\n    let content;\r\n    console.log(\"content for activeTab: \" + activeTab);\r\n    switch (activeTab) {\r\n        case 0:\r\n            content = employee && <EmployeeDetails employee={employee} setEmployee={setEmployee} employeeGroups={employeeGroups}></EmployeeDetails>;\r\n            break;\r\n        case 1:\r\n            content = <EmployeeGroups employee={employee} userGroups={userGroups}></EmployeeGroups>;\r\n            break;\r\n        case -1:\r\n            // content = <div></div>;\r\n            break;\r\n        default:\r\n            content = <h3>No such tab: {activeTab}</h3>;\r\n            break;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (employeeGroups.length === 0) {\r\n            console.log(\"only once...\");\r\n            searchEmpGroups();\r\n        }\r\n        else {\r\n            console.log(\"already have empgroups\");\r\n        }\r\n    });\r\n\r\n    console.log(\"rendering Employee - group: \" + employeeGroups);\r\n    return <div>\r\n        <Typography use=\"headline4\">Employees</Typography>\r\n\r\n            <GridRow>\r\n                <GridCell span={6}>\r\n                <TabBar\r\n            activeTabIndex={activeTab}\r\n            onActivate={evt => setTab(evt.detail.index)}\r\n        >\r\n                    <Tab minWidth>Employee</Tab>\r\n                    <Tab minWidth>User Groups</Tab>\r\n                    </TabBar>\r\n                </GridCell>\r\n                <GridCell>\r\n                    <TextField autoFocus outlined icon=\"search\" label=\"Search...\" value={search} onChange={handleChange} onClick={clickedSearchButton} onKeyDown={keyDown}/>\r\n                    <MenuSurfaceAnchor>\r\n                        <Menu open={open} renderToPortal={true}>\r\n                            {employees.map(e => (\r\n                                <MenuItem key={e.user} onClick={() => clicked(e)}>{e.name} - {e.login}</MenuItem>\r\n                            ))}\r\n                        </Menu>\r\n                    </MenuSurfaceAnchor>\r\n                </GridCell>\r\n            </GridRow>\r\n        {content}\r\n        {/* <EmployeeList employees={employees} setEmployees={setEmployees} employee={employee} setEmployee={setEmployee}></EmployeeList> */}\r\n        {detailedList && <EmployeeListDataTable employees={employees} clicked={clicked} ></EmployeeListDataTable>}\r\n    </div>;\r\n}\r\n\r\nexport default Employees;\r\n","import React, { } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Drawer, DrawerContent, DrawerHeader, DrawerSubtitle, DrawerTitle, List, ListItem } from \"rmwc\";\r\nimport 'rmwc/dist/styles'\r\n\r\nconst Menu = () => {\r\n    return <Drawer>\r\n        <DrawerHeader>\r\n            <Link to=\"/\" style={{ color: 'inherit', textDecoration: 'inherit' }}>\r\n                <DrawerTitle>AOM 2</DrawerTitle>\r\n            </Link>\r\n            <DrawerSubtitle>Next generation</DrawerSubtitle>\r\n        </DrawerHeader>\r\n        <DrawerContent>\r\n            <List>\r\n                <ListItem>\r\n                    <Link to=\"/employees\" style={{ color: 'inherit', textDecoration: 'inherit' }}>Employees</Link>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Link to=\"/test1\" style={{ color: 'inherit', textDecoration: 'inherit' }}>Test 1</Link>\r\n                </ListItem>\r\n                <ListItem>Pizza</ListItem>\r\n                <ListItem>Icecream</ListItem>\r\n            </List>\r\n        </DrawerContent>\r\n    </Drawer>\r\n}\r\n\r\nexport default Menu;\r\n","import { Grid, GridCell, Portal } from 'rmwc';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './App.css';\r\nimport Employees from './components/employees/Employee';\r\nimport 'rmwc/dist/styles'\r\nimport Menu from './components/menu/Menu';\r\nimport WebFont from 'webfontloader';\r\n\r\nWebFont.load({\r\n  google: {\r\n    families: ['Roboto:300,500,700', 'Material Icons']\r\n  }\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n    <Router>\r\n      <Grid align=\"left\">\r\n        <GridCell align=\"top\" span={3}><Menu></Menu></GridCell>\r\n        <GridCell align=\"top\" span={9}>\r\n          <Switch>\r\n            <Route path='/employees' component={Employees} />\r\n            <Route path='/test1' >\r\n              <div>test1</div>\r\n            </Route>\r\n          </Switch>\r\n        </GridCell>\r\n      </Grid>\r\n    </Router>\r\n    <Portal /> \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n/*\r\nHämta från pers, men försiktigt med Routern...\r\n*/\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}